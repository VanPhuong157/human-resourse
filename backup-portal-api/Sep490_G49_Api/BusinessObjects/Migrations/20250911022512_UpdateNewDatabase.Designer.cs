// <auto-generated />
using System;
using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(SEP490_G49Context))]
    [Migration("20250911022512_UpdateNewDatabase")]
    partial class UpdateNewDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObjects.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bf10d6a-c521-44be-804e-8f70e6ae26d1"),
                            CreatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9926),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Admin",
                            Name = "Admin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserInformationId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("BusinessObjects.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("BusinessObjects.Models.OKR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Achieved")
                        .HasColumnType("int");

                    b.Property<string>("ActionPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionPlanDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfidenceLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cycle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargerNumber")
                        .HasColumnType("int");

                    b.Property<int>("TargetProgress")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("OKRs");
                });

            modelBuilder.Entity("BusinessObjects.Models.OkrHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewAchieved")
                        .HasColumnType("int");

                    b.Property<int?>("NewProgress")
                        .HasColumnType("int");

                    b.Property<string>("NewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OkrId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OldAchieved")
                        .HasColumnType("int");

                    b.Property<int?>("OldProgress")
                        .HasColumnType("int");

                    b.Property<string>("OldStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OkrId");

                    b.ToTable("okrHistories");
                });

            modelBuilder.Entity("BusinessObjects.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("054ad0e5-acf7-4f83-815c-e5500bee5e6b"),
                            Name = "Candidate:List"
                        },
                        new
                        {
                            Id = new Guid("8a587770-c2c8-4eca-93a2-9e165b909d7b"),
                            Name = "Candidate:Update"
                        },
                        new
                        {
                            Id = new Guid("0e593329-b61a-4ec2-a43d-878fa01a5867"),
                            Name = "Candidate:Create"
                        },
                        new
                        {
                            Id = new Guid("f4c9a5d6-2c32-48a3-b982-931769f7b7fe"),
                            Name = "JobPost:List"
                        },
                        new
                        {
                            Id = new Guid("e477af98-e937-40b1-aee9-c53c8a91d954"),
                            Name = "JobPost:Detail"
                        },
                        new
                        {
                            Id = new Guid("6b6d688a-40b8-48f1-9e20-5762ad427715"),
                            Name = "JobPost:Create"
                        },
                        new
                        {
                            Id = new Guid("d192acc4-1ee7-4cf7-838e-0680076a78c3"),
                            Name = "JobPost:Update"
                        },
                        new
                        {
                            Id = new Guid("01ce805d-e56f-4837-9f27-f4e31e67a22e"),
                            Name = "Employee:List"
                        },
                        new
                        {
                            Id = new Guid("eec37f38-d5b5-4a16-ab3f-4ebc5b747d34"),
                            Name = "Employee:Create"
                        },
                        new
                        {
                            Id = new Guid("2e607831-8cd6-41fa-b934-9a2ac19dfc1d"),
                            Name = "Employee:Edit"
                        },
                        new
                        {
                            Id = new Guid("c6df77f3-81a5-4c57-b116-53a7f21c4986"),
                            Name = "Employee:UpdateStatus"
                        },
                        new
                        {
                            Id = new Guid("84f5598f-98b9-4c82-b212-b63efca554f2"),
                            Name = "EmployeeFamily:List"
                        },
                        new
                        {
                            Id = new Guid("cbbcc181-d1fb-4970-9949-777a1a3ce387"),
                            Name = "EmployeeFamily:Create"
                        },
                        new
                        {
                            Id = new Guid("8fb6d3a0-daa5-4ea9-b59c-6541ddf65ebb"),
                            Name = "EmployeeFamily:Edit"
                        },
                        new
                        {
                            Id = new Guid("ba2a70b3-10ee-4e5f-94aa-35a1db617c10"),
                            Name = "EmployeeFamily:Delete"
                        },
                        new
                        {
                            Id = new Guid("0829e08b-583e-4ac3-a349-e9d56ef71a9d"),
                            Name = "EmployeeHistory:List"
                        },
                        new
                        {
                            Id = new Guid("d7811916-2ffc-426a-8561-3013225cf9e2"),
                            Name = "Okr:List"
                        },
                        new
                        {
                            Id = new Guid("a0508a87-2c38-48ea-bbc3-8dd25cf2c584"),
                            Name = "Okr:Detail"
                        },
                        new
                        {
                            Id = new Guid("ded1da72-2523-41f4-a651-330ca8804e3b"),
                            Name = "Okr:Comment"
                        },
                        new
                        {
                            Id = new Guid("3f4456ad-6589-4896-89b6-a18e4d8b7086"),
                            Name = "Okr:History"
                        },
                        new
                        {
                            Id = new Guid("2df7174c-c270-4021-9e86-69faa72086a1"),
                            Name = "Okr:EditProgress"
                        },
                        new
                        {
                            Id = new Guid("4550e1f6-57c0-4b9f-8362-4562bfa88826"),
                            Name = "Okr:EditOwner"
                        },
                        new
                        {
                            Id = new Guid("4d77c298-d02f-420f-ad98-936e37f26ec1"),
                            Name = "OkrRequest:List"
                        },
                        new
                        {
                            Id = new Guid("18b6356d-2bb2-4525-baab-214afaf13faf"),
                            Name = "OkrRequest:Create"
                        },
                        new
                        {
                            Id = new Guid("0a6608a6-b1f9-44cf-9e7d-8d033c548947"),
                            Name = "OkrRequest:Edit"
                        },
                        new
                        {
                            Id = new Guid("5b96eab3-85fe-4d9f-b625-db72fe1d8455"),
                            Name = "OkrRequest:Update"
                        },
                        new
                        {
                            Id = new Guid("daefe1d3-28b3-4901-9e20-41ccd74f3b5e"),
                            Name = "OkrRequest:Detail"
                        },
                        new
                        {
                            Id = new Guid("f2fbfa3c-a3f9-4909-830c-7fe16999dc5c"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("a3b2674d-c3bd-44b2-b6a9-cd11cc10339b"),
                            Name = "Common"
                        },
                        new
                        {
                            Id = new Guid("4f9068dd-6f69-483f-97fa-77a79b59edf9"),
                            Name = "EmployeeInformation:Detail"
                        },
                        new
                        {
                            Id = new Guid("9e89898e-ad66-4b6b-b607-1353d22dd71b"),
                            Name = "EmployeeInformation:Edit"
                        },
                        new
                        {
                            Id = new Guid("380c2e30-9242-4401-879f-3756ad0156ef"),
                            Name = "Employee:UpdatePosition"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            CreatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9172),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Administrator role with all permissions.",
                            Name = "Admin",
                            Type = "Basic",
                            UpdatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9174),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            CreatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9176),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Human Resources.",
                            Name = "HR",
                            Type = "Basic",
                            UpdatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9176),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            CreatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9178),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Employees.",
                            Name = "Employee",
                            Type = "Basic",
                            UpdatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9178),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            CreatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9179),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Board of Directors",
                            Name = "BOD",
                            Type = "Basic",
                            UpdatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9180),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            CreatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9201),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Manager Of Department",
                            Name = "Manager",
                            Type = "Basic",
                            UpdatedAt = new DateTime(2025, 9, 11, 2, 25, 11, 764, DateTimeKind.Utc).AddTicks(9201),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("daefe1d3-28b3-4901-9e20-41ccd74f3b5e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("2df7174c-c270-4021-9e86-69faa72086a1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("3f4456ad-6589-4896-89b6-a18e4d8b7086"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("84f5598f-98b9-4c82-b212-b63efca554f2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("0829e08b-583e-4ac3-a349-e9d56ef71a9d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("4f9068dd-6f69-483f-97fa-77a79b59edf9"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("a3b2674d-c3bd-44b2-b6a9-cd11cc10339b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("18b6356d-2bb2-4525-baab-214afaf13faf"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("0a6608a6-b1f9-44cf-9e7d-8d033c548947"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("4d77c298-d02f-420f-ad98-936e37f26ec1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("d7811916-2ffc-426a-8561-3013225cf9e2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("ded1da72-2523-41f4-a651-330ca8804e3b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("a0508a87-2c38-48ea-bbc3-8dd25cf2c584"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("ba2a70b3-10ee-4e5f-94aa-35a1db617c10"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("8fb6d3a0-daa5-4ea9-b59c-6541ddf65ebb"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("5659d538-3a19-4c5a-aec8-2c024cba0f05"),
                            PermissionId = new Guid("cbbcc181-d1fb-4970-9949-777a1a3ce387"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("daefe1d3-28b3-4901-9e20-41ccd74f3b5e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("4d77c298-d02f-420f-ad98-936e37f26ec1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("4550e1f6-57c0-4b9f-8362-4562bfa88826"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("2df7174c-c270-4021-9e86-69faa72086a1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("84f5598f-98b9-4c82-b212-b63efca554f2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("c6df77f3-81a5-4c57-b116-53a7f21c4986"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("2e607831-8cd6-41fa-b934-9a2ac19dfc1d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("01ce805d-e56f-4837-9f27-f4e31e67a22e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("eec37f38-d5b5-4a16-ab3f-4ebc5b747d34"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("0829e08b-583e-4ac3-a349-e9d56ef71a9d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("4f9068dd-6f69-483f-97fa-77a79b59edf9"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("a3b2674d-c3bd-44b2-b6a9-cd11cc10339b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("18b6356d-2bb2-4525-baab-214afaf13faf"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("0a6608a6-b1f9-44cf-9e7d-8d033c548947"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("d7811916-2ffc-426a-8561-3013225cf9e2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("ded1da72-2523-41f4-a651-330ca8804e3b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("a0508a87-2c38-48ea-bbc3-8dd25cf2c584"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("ba2a70b3-10ee-4e5f-94aa-35a1db617c10"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("8fb6d3a0-daa5-4ea9-b59c-6541ddf65ebb"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("cbbcc181-d1fb-4970-9949-777a1a3ce387"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("054ad0e5-acf7-4f83-815c-e5500bee5e6b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("8a587770-c2c8-4eca-93a2-9e165b909d7b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("0e593329-b61a-4ec2-a43d-878fa01a5867"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("f4c9a5d6-2c32-48a3-b982-931769f7b7fe"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("e477af98-e937-40b1-aee9-c53c8a91d954"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("6b6d688a-40b8-48f1-9e20-5762ad427715"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("4f2dbb46-273e-4aff-b0ae-4a5fa528aaa5"),
                            PermissionId = new Guid("d192acc4-1ee7-4cf7-838e-0680076a78c3"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("daefe1d3-28b3-4901-9e20-41ccd74f3b5e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("4550e1f6-57c0-4b9f-8362-4562bfa88826"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("2df7174c-c270-4021-9e86-69faa72086a1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("3f4456ad-6589-4896-89b6-a18e4d8b7086"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("ba2a70b3-10ee-4e5f-94aa-35a1db617c10"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("8fb6d3a0-daa5-4ea9-b59c-6541ddf65ebb"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("cbbcc181-d1fb-4970-9949-777a1a3ce387"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("01ce805d-e56f-4837-9f27-f4e31e67a22e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("4f9068dd-6f69-483f-97fa-77a79b59edf9"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("a3b2674d-c3bd-44b2-b6a9-cd11cc10339b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("eec37f38-d5b5-4a16-ab3f-4ebc5b747d34"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("2e607831-8cd6-41fa-b934-9a2ac19dfc1d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("c6df77f3-81a5-4c57-b116-53a7f21c4986"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("84f5598f-98b9-4c82-b212-b63efca554f2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("0829e08b-583e-4ac3-a349-e9d56ef71a9d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("d7811916-2ffc-426a-8561-3013225cf9e2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("a0508a87-2c38-48ea-bbc3-8dd25cf2c584"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("ded1da72-2523-41f4-a651-330ca8804e3b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("4d77c298-d02f-420f-ad98-936e37f26ec1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("18b6356d-2bb2-4525-baab-214afaf13faf"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("0a6608a6-b1f9-44cf-9e7d-8d033c548947"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("5b96eab3-85fe-4d9f-b625-db72fe1d8455"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("054ad0e5-acf7-4f83-815c-e5500bee5e6b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("8a587770-c2c8-4eca-93a2-9e165b909d7b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("f4c9a5d6-2c32-48a3-b982-931769f7b7fe"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("e477af98-e937-40b1-aee9-c53c8a91d954"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("6b6d688a-40b8-48f1-9e20-5762ad427715"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("bc2e856e-0abd-4ca1-9c5f-7f4ea3faa14d"),
                            PermissionId = new Guid("d192acc4-1ee7-4cf7-838e-0680076a78c3"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("ba2a70b3-10ee-4e5f-94aa-35a1db617c10"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("daefe1d3-28b3-4901-9e20-41ccd74f3b5e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("4550e1f6-57c0-4b9f-8362-4562bfa88826"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("2df7174c-c270-4021-9e86-69faa72086a1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("3f4456ad-6589-4896-89b6-a18e4d8b7086"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("cbbcc181-d1fb-4970-9949-777a1a3ce387"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("8fb6d3a0-daa5-4ea9-b59c-6541ddf65ebb"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("01ce805d-e56f-4837-9f27-f4e31e67a22e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("4f9068dd-6f69-483f-97fa-77a79b59edf9"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("a3b2674d-c3bd-44b2-b6a9-cd11cc10339b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("eec37f38-d5b5-4a16-ab3f-4ebc5b747d34"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("2e607831-8cd6-41fa-b934-9a2ac19dfc1d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("c6df77f3-81a5-4c57-b116-53a7f21c4986"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("84f5598f-98b9-4c82-b212-b63efca554f2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("0829e08b-583e-4ac3-a349-e9d56ef71a9d"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("d7811916-2ffc-426a-8561-3013225cf9e2"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("a0508a87-2c38-48ea-bbc3-8dd25cf2c584"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("ded1da72-2523-41f4-a651-330ca8804e3b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("4d77c298-d02f-420f-ad98-936e37f26ec1"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("0a6608a6-b1f9-44cf-9e7d-8d033c548947"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("5b96eab3-85fe-4d9f-b625-db72fe1d8455"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("054ad0e5-acf7-4f83-815c-e5500bee5e6b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("8a587770-c2c8-4eca-93a2-9e165b909d7b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("f4c9a5d6-2c32-48a3-b982-931769f7b7fe"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("e477af98-e937-40b1-aee9-c53c8a91d954"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("6b6d688a-40b8-48f1-9e20-5762ad427715"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("7d4e0498-36dd-478c-ab11-b28c25e9da0f"),
                            PermissionId = new Guid("d192acc4-1ee7-4cf7-838e-0680076a78c3"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            PermissionId = new Guid("a3b2674d-c3bd-44b2-b6a9-cd11cc10339b"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            PermissionId = new Guid("01ce805d-e56f-4837-9f27-f4e31e67a22e"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            PermissionId = new Guid("eec37f38-d5b5-4a16-ab3f-4ebc5b747d34"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            PermissionId = new Guid("c6df77f3-81a5-4c57-b116-53a7f21c4986"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            PermissionId = new Guid("f2fbfa3c-a3f9-4909-830c-7fe16999dc5c"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        },
                        new
                        {
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            PermissionId = new Guid("380c2e30-9242-4401-879f-3756ad0156ef"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsEnabled = true
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccessTokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RefreshTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TemporaryPasswordExpires")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("TemporaryPasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("TemporaryPasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62240fc0-2a2a-4b45-9ba5-6a57667413c2"),
                            AccessTokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 9, 11, 9, 25, 11, 764, DateTimeKind.Local).AddTicks(9877),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DepartmentId = new Guid("7bf10d6a-c521-44be-804e-8f70e6ae26d1"),
                            IsDeleted = false,
                            PasswordHash = new byte[] { 154, 150, 20, 36, 42, 43, 152, 92, 211, 239, 140, 160, 149, 216, 199, 160, 175, 124, 222, 34, 46, 211, 136, 130, 119, 186, 181, 40, 156, 247, 76, 111, 0, 73, 81, 215, 86, 143, 45, 89, 197, 234, 89, 172, 143, 144, 151, 30, 240, 123, 88, 74, 171, 113, 88, 67, 170, 61, 205, 122, 5, 188, 169, 233 },
                            PasswordSalt = new byte[] { 87, 150, 154, 83, 20, 152, 26, 2, 70, 98, 39, 240, 173, 151, 240, 202, 28, 170, 228, 6, 190, 174, 231, 118, 6, 175, 112, 235, 9, 164, 202, 25, 56, 57, 224, 224, 121, 91, 89, 195, 168, 221, 248, 173, 198, 202, 167, 150, 205, 36, 205, 49, 183, 39, 111, 217, 168, 251, 214, 8, 149, 1, 196, 9, 26, 135, 111, 137, 114, 216, 19, 247, 80, 196, 240, 3, 70, 158, 153, 97, 162, 203, 212, 160, 243, 249, 15, 219, 195, 233, 74, 187, 157, 50, 21, 99, 212, 232, 80, 217, 97, 176, 179, 164, 61, 46, 57, 150, 3, 24, 158, 223, 245, 35, 129, 77, 9, 93, 210, 118, 249, 174, 74, 236, 254, 233, 231, 99 },
                            RefreshTokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RefreshTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("9b80c7d9-7417-4a2c-9f93-919f18a89dd7"),
                            Status = true,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "AdminSHR"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.UserFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserGroup_Role", b =>
                {
                    b.Property<Guid>("UserGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserGroupId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserGroup_Roles");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserGroup_User", b =>
                {
                    b.Property<Guid>("UserGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserGroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroup_Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistories");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressOfProvide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfProvide")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DriverLicenseIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverLicenseIssuePlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverLicenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPartyMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnionMember")
                        .HasColumnType("bit");

                    b.Property<string>("MatitalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportIssuedAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PassportIssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religious")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInformations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a852b906-1eac-44ba-bcbe-4f43ad62af11"),
                            Code = "ADMIN",
                            FullName = "AdminSHR",
                            IsPartyMember = false,
                            IsUnionMember = false,
                            Status = "Active",
                            UserId = new Guid("62240fc0-2a2a-4b45-9ba5-6a57667413c2")
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.UserPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("BusinessObjects.Models.Family", b =>
                {
                    b.HasOne("BusinessObjects.Models.UserInformation", "UserInformation")
                        .WithMany("FamilyInformation")
                        .HasForeignKey("UserInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("BusinessObjects.Models.Notification", b =>
                {
                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.OKR", b =>
                {
                    b.HasOne("BusinessObjects.Models.Department", "Department")
                        .WithMany("OKRs")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("BusinessObjects.Models.OkrHistory", b =>
                {
                    b.HasOne("BusinessObjects.Models.OKR", "OKR")
                        .WithMany("OkrHistories")
                        .HasForeignKey("OkrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OKR");
                });

            modelBuilder.Entity("BusinessObjects.Models.RolePermission", b =>
                {
                    b.HasOne("BusinessObjects.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.HasOne("BusinessObjects.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserFile", b =>
                {
                    b.HasOne("BusinessObjects.Models.UserInformation", "UserInformation")
                        .WithMany("UserFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserGroup_Role", b =>
                {
                    b.HasOne("BusinessObjects.Models.Role", "Role")
                        .WithMany("UserGroup_Roles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.UserGroup", "UserGroup")
                        .WithMany("UserGroup_Roles")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserGroup_User", b =>
                {
                    b.HasOne("BusinessObjects.Models.UserGroup", "UserGroup")
                        .WithMany("UserGroup_Users")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("UserGroup_Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserHistory", b =>
                {
                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserInformation", b =>
                {
                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithOne("UserInformation")
                        .HasForeignKey("BusinessObjects.Models.UserInformation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserPermission", b =>
                {
                    b.HasOne("BusinessObjects.Models.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.Department", b =>
                {
                    b.Navigation("OKRs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.OKR", b =>
                {
                    b.Navigation("OkrHistories");
                });

            modelBuilder.Entity("BusinessObjects.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("BusinessObjects.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserGroup_Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("UserGroup_Users");

                    b.Navigation("UserHistories");

                    b.Navigation("UserInformation");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserGroup", b =>
                {
                    b.Navigation("UserGroup_Roles");

                    b.Navigation("UserGroup_Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.UserInformation", b =>
                {
                    b.Navigation("FamilyInformation");

                    b.Navigation("UserFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
